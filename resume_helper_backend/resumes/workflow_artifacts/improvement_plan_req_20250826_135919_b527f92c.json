{
  "edits": [
    {
      "type": "modify_bullet",
      "bullet_id": "bullet_1",
      "new_text": "\u2022 Designed and scaled a distributed backend system for an emergency communications platform serving 100,000+ users, using .NET (C# 9.0+), Python, and SQL Server; architected REST and gRPC APIs, reducing end-to-end latency by 40% and enabling seamless third-party integrations."
    },
    {
      "type": "insert_bullet",
      "role_id": "role_1",
      "after_bullet_id": "bullet_2",
      "text": "\u2022 Evaluated and implemented new data technologies including Apache Iceberg, Apache Flink, and Trino/Presto to enhance the data lakehouse architecture, improving data ingestion, processing, and querying capabilities."
    },
    {
      "type": "insert_bullet",
      "role_id": "role_1",
      "after_bullet_id": "bullet_3",
      "text": "\u2022 Led architecture design sessions with cross-functional teams to ensure the data lakehouse components met performance, scalability, and reliability requirements, mentoring junior engineers on best practices."
    },
    {
      "type": "modify_bullet",
      "bullet_id": "bullet_4",
      "new_text": "\u2022 Engineered and optimized high-performance PostgreSQL and SQL Server databases by tuning complex queries, implementing B-Tree and Hash indexes, and applying table partitioning, reducing query latency by 40% and boosting system scalability by 30% under production load."
    },
    {
      "type": "insert_bullet",
      "role_id": "role_2",
      "after_bullet_id": "bullet_5",
      "text": "\u2022 Designed and deployed cloud-based data infrastructure using AWS and Azure services, including S3, Redshift, and Snowflake, to create a scalable and fault-tolerant data lakehouse architecture."
    },
    {
      "type": "modify_bullet",
      "bullet_id": "bullet_6",
      "new_text": "\u2022 Designed and deployed distributed database architectures (PostgreSQL, Redis) incorporating replication, sharding, and fault-tolerant configurations, achieving 99.99% uptime and a 3x improvement in high-concurrency transaction throughput for mission-critical applications."
    },
    {
      "type": "insert_bullet",
      "role_id": "role_3",
      "after_bullet_id": "bullet_8",
      "text": "\u2022 Developed and deployed containerized microservices using Docker and Kubernetes, integrating with CI/CD pipelines to enable rapid, reliable, and scalable application deployments across cloud environments."
    },
    {
      "type": "upsert_skill",
      "bucket": "Technical Skills",
      "value": "Apache Spark"
    },
    {
      "type": "upsert_skill",
      "bucket": "Technical Skills",
      "value": "DevOps"
    },
    {
      "type": "upsert_skill",
      "bucket": "Technical Skills",
      "value": "Cloud Architecture"
    }
  ],
  "constraints": {
    "max_bullets_per_role": 8,
    "forbid_fabrication": true
  }
}